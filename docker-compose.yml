services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  booksharing-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - JWT_KEY=${JWT_KEY}
    volumes:
      # Mount static files for development
      - ./wwwroot:/app/wwwroot
    depends_on:
      - postgres
    profiles:
      - prod
    restart: unless-stopped

  # Development service with hot reload
  booksharing-api-dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - JWT_KEY=${JWT_KEY}
    volumes:
      - ./wwwroot:/app/wwwroot
    depends_on:
      - postgres
    profiles:
      - dev
    restart: unless-stopped

volumes:
  postgres_data: